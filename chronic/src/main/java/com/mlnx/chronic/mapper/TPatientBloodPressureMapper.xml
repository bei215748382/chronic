<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlnx.chronic.mapper.TPatientBloodPressureMapper">
	<resultMap id="BaseResultMap" type="com.mlnx.chronic.entity.TPatientBloodPressure">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="patient_id" property="patientId" jdbcType="INTEGER" />
		<result column="date_time" property="dateTime" jdbcType="TIMESTAMP" />
		<result column="device_id" property="deviceId" jdbcType="VARCHAR" />
		<result column="diastolic" property="diastolic" jdbcType="INTEGER" />
		<result column="systolic" property="systolic" jdbcType="INTEGER" />
		<result column="heart_rate" property="heartRate" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="timestamp" property="timestamp" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap type="com.mlnx.chronic.vo.DateCountVo" id="DateCountResultMap">
		<result column="date" property="date" jdbcType="VARCHAR" />
		<result column="total" property="sum" jdbcType="INTEGER" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_patient_blood_pressure
		where id = #{id}
	</delete>
	<insert id="insert" parameterType="com.mlnx.chronic.entity.TPatientBloodPressure">
		insert into
		t_patient_blood_pressure (id, patient_id, date_time,
		device_id,
		diastolic, systolic,
		heart_rate, state, comment,
		timestamp)
		values
		(#{id}, #{patientId}, #{dateTime},
		#{deviceId}, #{diastolic},
		#{systolic},
		#{heartRate}, #{state}, #{comment},
		#{timestamp})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.mlnx.chronic.entity.TPatientBloodPressure">
		update t_patient_blood_pressure
		<set>
			<if test="patientId != null and patientId != ''">
				patient_id = #{patientId},
			</if>
			<if test="dateTime != null and dateTime != ''">
				date_time = #{dateTime},
			</if>
			<if test="deviceId != null and deviceId != ''">
				device_id = #{deviceId},
			</if>
			<if test="diastolic != null and diastolic != ''">
				diastolic = #{diastolic},
			</if>
			<if test="systolic != null and systolic != ''">
				systolic = #{systolic},
			</if>
			<if test="heartRate != null and heartRate != ''">
				heart_rate = #{heartRate},
			</if>
			<if test="state != null and state != ''">
				state = #{state},
			</if>
			<if test="comment != null and comment != ''">
				comment = #{comment},
			</if>
			<if test="timestamp != null and timestamp != ''">
				timestamp = #{timestamp}
			</if>
		</set>
		where id = #{id}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, patient_id, date_time, device_id, diastolic,
		systolic,
		heart_rate, state,
		comment, timestamp
		from
		t_patient_blood_pressure
		where id = #{id}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, patient_id,
		date_time, device_id, diastolic, systolic,
		heart_rate, state,
		comment,
		timestamp
		from t_patient_blood_pressure
	</select>
	<select id="findByPatientIdLimitOne" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select *
		from t_patient_blood_pressure where patient_id =
		#{patientId} order
		by date_time limit 1;
	</select>
	<select id="findCountByPatientId" parameterType="java.lang.Integer"
		resultType="java.lang.Long">
		select count(1) from t_patient_blood_pressure where
		patient_id = #{patientId}
	</select>
	<select id="getBloodPressureByPatientIdWithTimeRange"
		parameterType="map" resultMap="BaseResultMap">
		select *
		from t_patient_blood_pressure where patient_id = #{patientId}
		and date_time  <![CDATA[ >  ]]>
		#{startTime} and date_time  <![CDATA[ <=  ]]>
		#{endTime}
	</select>
	<select id="getBloodPressuereWithEndAndLimit" parameterType="map"
		resultMap="BaseResultMap">
		select *
		from t_patient_blood_pressure where patient_id = #{patientId}
		and date_time  <![CDATA[ <=  ]]>
		#{endTime} limit #{limit}
	</select>
	<select id="synBloodPressureWithTimeRange" parameterType="map"
		resultMap="BaseResultMap">
		select *
		from t_patient_blood_pressure where patient_id = #{patientId}
		and date_time  <![CDATA[ >  ]]>
		#{startTime} and date_time  <![CDATA[ <=  ]]>
		#{endTime} and timestamp  <![CDATA[ >  ]]>
		#{timestamp}
	</select>
	<select id="getBloodPressureMonth" parameterType="Integer"
		resultMap="DateCountResultMap">
		select date_format(date_time,'%Y-%m') date,count(1) total
		from t_patient_blood_pressure where patient_id = #{patientId} group by
		date_format(date_time,'%Y-%m');
	</select>
	<select id="getBloodPressureDate" parameterType="map"
		resultMap="DateCountResultMap">
		select date_format(date_time,'%Y-%m-%d') date,count(1) total
		from t_patient_blood_pressure where patient_id = #{patientId} and
		year(date_time)=year(#{date}) and month(date_time)=month
		(#{date})
		group by date_format(date_time,'%Y-%m-%d');
	</select>
</mapper>